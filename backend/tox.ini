# Generated from:
# https://github.com/plone/meta/tree/master/config/default
# See the inline comments on how to expand/tweak this configuration file
[tox]
# We need 4.4.0 for constrain_package_deps.
min_version = 4.4.0
envlist =
    lint
    test
    dependencies


##
# Add extra configuration options in .meta.toml:
#  [tox]
#  envlist_lines = """
#      my_other_environment
#  """
#  config_lines = """
#  my_extra_top_level_tox_configuration_lines
#  """
##

[testenv]
skip_install = true
allowlist_externals =
    echo
    false
# Make sure typos like `tox -e formaat` are caught instead of silently doing nothing.
# See https://github.com/tox-dev/tox/issues/2858.
commands =
    echo "Unrecognized environment name {envname}"
    false

[testenv:init]
description = Prepare environment
skip_install = true
deps =
    mxdev
commands =
    mxdev -c mx.ini
    echo "Initial setup for mxdev"


[testenv:format]
description = automatically reformat code
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a pyupgrade
    pre-commit run -a isort
    pre-commit run -a black
    pre-commit run -a zpretty

[testenv:lint]
description = run linters that will help improve the code style
skip_install = true
deps =
    pre-commit
commands =
    pre-commit run -a

[testenv:dependencies]
description = check if the package defines all its dependencies
skip_install = true
deps =
    build
    z3c.dependencychecker==2.11
commands =
    python -m build --sdist --no-isolation
    dependencychecker

[testenv:dependencies-graph]
description = generate a graph out of the dependencies of the package
skip_install = false
allowlist_externals =
    sh
deps =
    pipdeptree==2.5.1
    graphviz  # optional dependency of pipdeptree
commands =
    sh -c 'pipdeptree --exclude setuptools,wheel,pipdeptree,zope.interface,zope.component --graph-output svg > dependencies.svg'

[testenv:test]
description = run the distribution tests
use_develop = true
skip_install = false
constrain_package_deps = true
set_env =
    ROBOT_BROWSER=headlesschrome

##
# Specify extra test environment variables in .meta.toml:
#  [tox]
#  test_environment_variables = """
#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/
#  """
#
# Set constrain_package_deps .meta.toml:
#  [tox]
#  constrain_package_deps = false
##
deps =
    pytest-plone
    pytest
    -c https://dist.plone.org/release/6.0-dev/constraints.txt

##
# Specify additional deps in .meta.toml:
#  [tox]
#  test_deps_additional = """
#     -esources/plonegovbr.portal_base[test]
#  """
#
# Specify a custom constraints file in .meta.toml:
#  [tox]
#  constraints_file = "https://my-server.com/constraints.txt"
##
commands =
    pytest --disable-warnings {posargs} {toxinidir}/tests
extras =
    test


[testenv:coverage]
description = get a test coverage report
use_develop = true
skip_install = false
constrain_package_deps = true
set_env =
    ROBOT_BROWSER=headlesschrome

##
# Specify extra test environment variables in .meta.toml:
#  [tox]
#  test_environment_variables = """
#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/
#  """
#
# Set constrain_package_deps .meta.toml:
#  [tox]
#  constrain_package_deps = "false"
##
deps =
    pytest-plone
    pytest
    coverage
    -c https://dist.plone.org/release/6.0-dev/constraints.txt

commands =
    coverage run --source plone.distribution -m pytest  {posargs} --disable-warnings {toxinidir}/tests
    coverage report -m --format markdown
    coverage xml
extras =
    test


[testenv:release-check]
description = ensure that the distribution is ready to release
skip_install = true
deps =
    twine
    build
    towncrier
    -c https://dist.plone.org/release/6.0-dev/constraints.txt

commands =
    # fake version to not have to install the package
    # we build the change log as news entries might break
    # the README that is displayed on PyPI
    towncrier build --version=100.0.0 --yes
    python -m build --sdist --no-isolation
    twine check dist/*

[testenv:circular]
description = ensure there are no cyclic dependencies
use_develop = true
skip_install = false
set_env =

##
# Specify extra test environment variables in .meta.toml:
#  [tox]
#  test_environment_variables = """
#      PIP_EXTRA_INDEX_URL=https://my-pypi.my-server.com/
#  """
##
allowlist_externals =
    sh
deps =
    pipdeptree
    pipforester
    -c https://dist.plone.org/release/6.0-dev/constraints.txt

commands =
    # Generate the full dependency tree
    sh -c 'pipdeptree -j > forest.json'
    # Generate a DOT graph with the circular dependencies, if any
    pipforester -i forest.json -o forest.dot --cycles
    # Report if there are any circular dependencies, i.e. error if there are any
    pipforester -i forest.json --check-cycles -o /dev/null


##
# Add extra configuration options in .meta.toml:
#  [tox]
#  extra_lines = """
#  _your own configuration lines_
#  """
##
