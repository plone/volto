import fs from 'fs';
import path from 'path';
import type { AddonRegistry } from './addon-registry';

function getAddonInfo(addon: string, registry: AddonRegistry) {
  return registry.getAddons().find((a) => a.name === addon);
}

function hasTailwind(addon: string, registry: AddonRegistry) {
  const addonInfo = getAddonInfo(addon, registry);
  if (addonInfo && addonInfo.packageJson) {
    const packageJson = JSON.parse(
      fs.readFileSync(addonInfo.packageJson, 'utf-8'),
    );
    return packageJson.dependencies && packageJson.dependencies['tailwindcss'];
  }
  return false;
}

function buildLoaderCode(registry: AddonRegistry, styleSheetPath: string) {
  const addonsStylesInfo = registry.getAddonStyles(styleSheetPath);

  let buf = `/*
  Don't change this file manually.
  It is autogenerated by @plone/registry.
  Add a ./${styleSheetPath} in your add-on to load your add-on styles in the app.
  */

`;
  addonsStylesInfo.forEach((addon) => {
    const customization = `${addon}/${styleSheetPath}`;
    const line = `@import '${customization}';\n`;
    buf += line;

    // Creates an entry `@source 'addonPath';` for each addon if the
    // add-on has tailwindcss as a dependency
    const addonInfo = getAddonInfo(addon, registry);
    if (hasTailwind(addon, registry)) {
      buf += `@source '${addonInfo!.basePath}';\n`;
    }
  });

  return buf;
}

export function createAddonsStyleLoader(registry: AddonRegistry) {
  const publicUIStyles = path.join(registry.projectRootPath, 'publicui.css');
  const cmsUIStyles = path.join(registry.projectRootPath, 'cmsui.css');

  fs.writeFileSync(
    publicUIStyles,
    buildLoaderCode(registry, 'styles/main.css'),
  );
  fs.writeFileSync(cmsUIStyles, buildLoaderCode(registry, 'styles/cmsui.css'));
}

export { buildLoaderCode };
