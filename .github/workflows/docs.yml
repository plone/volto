name: Documentation
on:
  push:
    tags:
      - '*'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2

      # node setup
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # node cache
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # node install
      - run: yarn install --frozen-lockfile

      # python setup
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      # python cache
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements-docs.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # python install
      - run: pip install virtualenv

      - name: pip install
        run: pip install -r requirements-docs.txt

      # Build main documentation
      - name: Build documentation
        working-directory: docs
        run: mkdocs build

      # Build Storybook
      - name: Build Storybook
        run: yarn build-storybook -o docs/build/storybook

      # Deploy docs to server
      - name: Deploy to server
        id: deploy
        uses: Pendect/action-rsyncer@v1.1.0
        env:
          DEPLOY_KEY: ${{secrets.DEPLOY_KEY}}
        with:
          flags: '-avzr --delete'
          options: ''
          ssh_options: '-p ${{secrets.DEPLOY_PORT}}'
          src: 'docs/build/'
          dest: '${{secrets.DEPLOY_USER}}@${{secrets.DEPLOY_SERVER}}:/var/www/docs.voltocms.com'


      - name: Display status from deploy
        run: echo "${{ steps.deploy.outputs.status }}"
